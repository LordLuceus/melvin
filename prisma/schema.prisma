generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model guild {
  id         String      @id(map: "PK_cfbbd0a2805cab7053b516068a3") @db.VarChar(20)
  gmChannel  String?     @db.VarChar(20)
  rolls      roll[]
  users      user[]
  rollGroups RollGroup[]
}

model roll {
  id      Int         @id(map: "PK_91319c8ec656321a667986a83c7") @default(autoincrement())
  name    String      @db.VarChar
  value   String      @db.VarChar
  userId  String?     @db.VarChar(20)
  guildId String?     @db.VarChar(20)
  user    user?       @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_070cea5d3d74c77d89c10d3afd9")
  guild   guild?      @relation(fields: [guildId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ccf7a0c45ed6b60227ad72792e9")
  groups  RollGroup[]
}

model user {
  id         String      @id(map: "PK_cace4a159ff9f2512dd42373760") @db.VarChar(20)
  rolls      roll[]
  guilds     guild[]
  rollGroups RollGroup[]
}

model RollGroup {
  id      Int    @id @default(autoincrement())
  name    String @db.VarChar
  userId  String @db.VarChar(20)
  guildId String @db.VarChar(20)
  rolls   roll[]
  user    user   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  guild   guild  @relation(fields: [guildId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
